/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeNthFromEnd(struct ListNode* head, int n) {
    struct ListNode *first,*second;
    //struct ListNode *a=(struct ListNode *)malloc(sizeof(struct ListNode));
    //struct ListNoded *second=head;
    //first=a;
    //second=a;
    //first->next=head;//when the length of linked list ==n,we need keep the first is not NULL
    //second->next=head;
    first=head;second=head;
    for(int i=0;i<n;i++)
    {
        first=first->next;
        if(first==NULL)   //when the length of linked list ==n,we need keep the first is not NULL 
        {                 //we don't need (malloc)creat a new space for it and worry about the storage leak
            return head->next;
        }
    }
    //printf("%d",first->val);
    while(first->next!=NULL)
    {
        first=first->next;
        second=second->next;
    }
    second->next=second->next->next;
    return head;
}
