int compare(char *str)
{
    //char *temp;
    int flag=0;
    int n=strlen(str);
    for (int i=0;i<n/2;i++)
    {
        if(str[i]!=str[n-i-1])
        {
            flag=1;
        }
    }
    return flag;
}

char* longestPalindrome(char* s)
{
    int n=strlen(s),len=0;
    char *result=(char*)malloc(sizeof(char)*1000);
    for(int i=0;i<n-len;i++)
    {
        char temp[1000]={'\0'};
        for (int j=i,m=0;j<n;j++,m++)
        {
            temp[m]=s[j];
            if((j-i+1>len)&&(s[j]==s[i])&&(!compare(temp)))
            {
                //if(!compare(temp))
                //{
                    result=temp;
                    len=j-i+1;
                //}
            }

        }
    }
    return result;
}
